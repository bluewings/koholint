{"version":3,"sources":["Map/Map.module.scss","Main/Main.module.scss","Map/useLeaflet.ts","Map/useContainerRect.ts","Map/Map.tsx","Map/index.ts","Main/Main.tsx","Main/index.ts","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","LEAFLET_URI","loadScript","src","Promise","resolve","reject","head","document","getElementsByTagName","script","createElement","type","onload","onerror","Error","split","pop","appendChild","useLeaflet","L","useState","ready","setReady","useEffect","a","window","err","useMemo","undefined","all","useContainerRect","elemRef","deps","dependencies","toString","mapFn","e","hasChanged","before","after","JSON","stringify","items","filter","indexOf","watch","length","reduce","prev","key","top","left","right","bottom","width","height","rect_","setRect","rect","useRef","current","requestId","checkRect","cancelAnimationFrame","parentNode","elemRect","getBoundingClientRect","tmpRect","next","requestAnimationFrame","locs","seaShell","MapInner","deepzoom","root","container","defaultZoom","zoom","getSizeInfo","maxZoom","fileURI","minZoom","tileImg","tileSizes","innerHTML","map","Math","max","zoomControl","attributionControl","zoomSnap","southWest","unproject","getMaxZoom","northEast","bounds","LatLngBounds","setMaxBounds","setView","lng","lat","myIcon","divIcon","className","styles","marker","iconSize","html","mons","icon","layerGroup","addTo","Control","Zoom","position","MapTileLayer","TileLayer","extend","createTile","coords","done","z","x","y","maxX","maxY","tileSrc","replace","tile","style","on","push","latlng","console","log","tms","continuousWorld","noWrap","defaultRadius","remove","containerStyle","ref","deepzoomSize","containerSize","deepzoomW","deepzoomH","containerW","containerH","r1","r2","scale","ceil","pow","Map","props","Main","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.eb7fe2e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Map_root__1b4eQ\",\"marker\":\"Map_marker__3Galn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Main_logo__1GFdy\"};","import { useEffect, useState, useMemo } from 'react';\nimport { Map, MapOptions, LatLngExpression } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\ninterface InitializeMap {\n  (element: string | HTMLElement, options?: MapOptions): Map;\n}\n\ninterface LatLngBounds {\n  new (southWest: LatLngExpression, northEast: LatLngExpression): any;\n}\n\nexport type Leaflet = {\n  map: InitializeMap;\n  LatLngBounds: LatLngBounds;\n  Control: any;\n  TileLayer: any;\n};\n\nconst LEAFLET_URI =\n  'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.5.1/leaflet.js';\n\nconst loadScript = (src: string) => {\n  return new Promise((resolve, reject) => {\n    const head = document.head || document.getElementsByTagName('head')[0];\n    const script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = src;\n    script.onload = resolve;\n    script.onerror = () =>\n      reject(new Error(`failed to load: ${src.split('/').pop()}`));\n    head.appendChild(script);\n  });\n};\n\nfunction useLeaflet(): Leaflet | undefined {\n  const [ready, setReady] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      // @ts-ignore\n      if (!window.L) {\n        await loadScript(LEAFLET_URI);\n      }\n      setReady(true);\n    })();\n  }, []);\n\n  let L: any;\n  try {\n    // @ts-ignore\n    L = window.L;\n  } catch (err) {\n    /* ignore */\n  }\n\n  return useMemo(() => (ready && L ? L : undefined), [ready, L]);\n}\n\nexport default useLeaflet;\n","import { useEffect, useMemo, useState, useRef, MutableRefObject } from 'react';\n\ntype ContainerRect = {\n  top: null | number;\n  left: null | number;\n  right: null | number;\n  bottom: null | number;\n  width: null | number;\n  height: null | number;\n};\n\n// type HTMLElementRef = MutableRefObject<HTMLElement | null>;\n\nconst all = ['top', 'left', 'right', 'bottom', 'width', 'height'];\n\nconst useContainerRect = (\n  elemRef: any,\n  deps?: string[] | Function,\n): ContainerRect => {\n  const dependencies = (deps || '').toString();\n  const mapFn = useMemo(\n    () => (typeof deps === 'function' ? deps : (e: any) => e),\n    [dependencies],\n  );\n\n  const hasChanged = useMemo(() => {\n    if (typeof deps === 'function') {\n      // return deps;\n\n      // const tmp = watch(tmpRect);\n\n      return (before: any, after: any) => {\n        return JSON.stringify(before) !== JSON.stringify(deps(after));\n      };\n\n      // return (rectA: any, rectB: any) => {\n      // };\n      // return hasChanged =\n      //   JSON.stringify(rect.current) !== JSON.stringify(watch(tmpRect));\n    }\n    const items = (deps || []).filter((e: string) => all.indexOf(e) !== -1);\n    const watch = items.length > 0 ? items : all;\n\n    return (before: any, after: any) => {\n      return watch.reduce(\n        (prev: boolean, key: string) => prev || before[key] !== after[key],\n        false,\n      );\n    };\n  }, [(deps || []).toString()]);\n\n  const [rect_, setRect] = useState<any>(() =>\n    mapFn({\n      top: null,\n      left: null,\n      right: null,\n      bottom: null,\n      width: null,\n      height: null,\n    }),\n  );\n\n  const rect = useRef<any>();\n  rect.current = rect_;\n\n  const requestId = useRef<number>();\n\n  useEffect(() => {\n    const checkRect = () => {\n      requestId.current && cancelAnimationFrame(requestId.current);\n      if (elemRef.current && elemRef.current.parentNode) {\n        const elemRect = elemRef.current.parentNode.getBoundingClientRect();\n        // let hasChanged: boolean;\n        // let next;\n        const tmpRect: any = {\n          top: elemRect.top,\n          left: elemRect.left,\n          right: elemRect.right,\n          bottom: elemRect.bottom,\n          width: elemRect.width,\n          height: elemRect.height,\n        };\n\n        // if (typeof hasChanged === 'function') {\n        //   // next = watch()\n        //   const tmp = hasChanged(tmpRect);\n        //   hasChanged =\n        //     JSON.stringify(rect.current) !==\n        //     JSON.stringify(hasChanged(tmpRect));\n        //   // console.log(\n        //   //   'case 1',\n        //   //   hasChanged,\n        //   //   JSON.stringify(rect.current),\n        //   //   JSON.stringify(watch(tmpRect)),\n        //   // );\n        //   rect.current = tmp;\n        // } else {\n        //   hasChanged = hasChanged.reduce(\n        //     (prev: boolean, key: string) =>\n        //       prev || rect.current[key] !== tmpRect[key],\n        //     false,\n        //   );\n        // }\n\n        if (hasChanged(rect.current, tmpRect)) {\n          const next = mapFn({\n            top: tmpRect.top,\n            left: tmpRect.left,\n            right: tmpRect.right,\n            bottom: tmpRect.bottom,\n            width: tmpRect.width,\n            height: tmpRect.height,\n          });\n          rect.current = next;\n          // console.log('>>>>> ', next);\n          setRect(next);\n          return;\n        }\n      }\n      requestId.current = requestAnimationFrame(checkRect);\n    };\n    checkRect();\n    return () => {\n      requestId.current && cancelAnimationFrame(requestId.current);\n    };\n  }, [elemRef.current || null, hasChanged, rect_]);\n\n  return rect_;\n};\n\nexport default useContainerRect;\n","import * as React from 'react';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  SyntheticEvent,\n} from 'react';\nimport useLeaflet, { Leaflet } from './useLeaflet';\nimport useContainerRect from './useContainerRect';\nimport styles from './Map.module.scss';\nimport deepzoom from './map.json';\nimport icon1 from './images/ico-4.svg';\n\ntype IProps = {\n  L: Leaflet;\n  deepzoom: any;\n};\n\nvar locs:any = [];\n\nconst monsters = [{\"lat\":85.04523142802671,\"lng\":-179.93785858154297},{\"lat\":85.01384928049275,\"lng\":-179.76207733154297},{\"lat\":85.01845846442565,\"lng\":-179.64847773313528},{\"lat\":85.01268538977108,\"lng\":-179.4273376464844},{\"lat\":85.02533002426063,\"lng\":-179.26815524697304},{\"lat\":85.04000983840967,\"lng\":-179.31987762451175},{\"lat\":85.04600233423471,\"lng\":-179.14306640625003},{\"lat\":85.04009888874582,\"lng\":-179.72190856933597},{\"lat\":85.0451721225929,\"lng\":-179.93785858154297}]\n\nconst phones = [{\"lat\":85.04457902930932,\"lng\":-179.87571716308594},{\"lat\":85.03730788685448,\"lng\":-179.879150390625},{\"lat\":85.01813319628694,\"lng\":-179.82505157589915},{\"lat\":85.02045817079237,\"lng\":-179.7237713634968},{\"lat\":85.01044637665916,\"lng\":-179.49600219726562},{\"lat\":85.02422277951345,\"lng\":-179.48501586914062},{\"lat\":85.01275884040457,\"lng\":-179.30322244763377},{\"lat\":85.03423451262329,\"lng\":-179.3198870122433}]\n\n\nconst homes = [{\"lat\":85.01888967699189,\"lng\":-179.94987487792972},{\"lat\":85.025503067195,\"lng\":-179.87537384033206},{\"lat\":85.01808474780562,\"lng\":-179.76860046386722},{\"lat\":85.03736728618173,\"lng\":-179.5475006103516},{\"lat\":85.02514441508455,\"lng\":-179.37150210142136},{\"lat\":85.0374563838429,\"lng\":-179.10427093505862}]\n\n\nconst moneyBag = [{\"lat\":85.0225520261357,\"lng\":-179.7738001014657},{\"lat\":85.0308479925631,\"lng\":-179.66085539669692},{\"lat\":85.03512525126912,\"lng\":-179.6382043982131}]\n\nconst seaShell = [{\"lat\":85.04303790475231,\"lng\":-179.81385954474683},{\"lat\":85.03802265689117,\"lng\":-179.87018248692675},{\"lat\":85.0343990366048,\"lng\":-179.94127302980021},{\"lat\":85.03134375770176,\"lng\":-179.82939278375872},{\"lat\":85.02649526984702,\"lng\":-179.8860591585129},{\"lat\":85.0246498210538,\"lng\":-179.89086721455266},{\"lat\":85.0246498210538,\"lng\":-179.86991782752233},{\"lat\":85.01961601566491,\"lng\":-179.88090766989887},{\"lat\":85.01827479705634,\"lng\":-179.77890819534133},{\"lat\":85.02056955198034,\"lng\":-179.76723148781622},{\"lat\":85.0183046058281,\"lng\":-179.75967597118236},{\"lat\":85.01937760312845,\"lng\":-179.70094900098252},{\"lat\":85.02667382542616,\"lng\":-179.7043833267252},{\"lat\":85.00865636133997,\"lng\":-179.91242645068752},{\"lat\":85.01161224854634,\"lng\":-179.83309352603163},{\"lat\":85.01262699887633,\"lng\":-179.76131611800966},{\"lat\":85.00602743938782,\"lng\":-179.68242216964265},{\"lat\":85.00722257508313,\"lng\":-179.59175597003593},{\"lat\":85.00716282507456,\"lng\":-179.4904433606269},{\"lat\":85.00865636133997,\"lng\":-179.4457971259721},{\"lat\":85.0163261085114,\"lng\":-179.4330901207242},{\"lat\":85.01411890474262,\"lng\":-179.60824073360078},{\"lat\":85.01871117837484,\"lng\":-179.49422111894384},{\"lat\":85.01891981780939,\"lng\":-179.59141253746165},{\"lat\":85.01957548500039,\"lng\":-179.6539172659784},{\"lat\":85.0210102600795,\"lng\":-179.5406986725857},{\"lat\":85.02520924024311,\"lng\":-179.50154735911917},{\"lat\":85.03451776121017,\"lng\":-179.48368886525725},{\"lat\":85.03294278074631,\"lng\":-179.52867853248634},{\"lat\":85.03733959279208,\"lng\":-179.5472238914968},{\"lat\":85.03837893604472,\"lng\":-179.64807737473083},{\"lat\":85.04449108407525,\"lng\":-179.64876423987934},{\"lat\":85.0448518485879,\"lng\":-179.40924953306433},{\"lat\":85.04523728663546,\"lng\":-179.2389069762275},{\"lat\":85.04129254634952,\"lng\":-179.25127054890112},{\"lat\":85.03814637476918,\"lng\":-179.23169489216784},{\"lat\":85.04194527595573,\"lng\":-179.20078596048376},{\"lat\":85.04461464107736,\"lng\":-179.14102869256115},{\"lat\":85.02888951264123,\"lng\":-179.26840266526088},{\"lat\":85.03061445338183,\"lng\":-179.1547264831782},{\"lat\":85.01936185499864,\"lng\":-179.14820126426707},{\"lat\":85.02362177607861,\"lng\":-179.31957411882675},{\"lat\":85.01515795178655,\"lng\":-179.21723121169495},{\"lat\":85.01506846859422,\"lng\":-179.1973121223874},{\"lat\":85.0117913370975,\"lng\":-179.3809809480003},{\"lat\":85.00734207296055,\"lng\":-179.18213348749921},{\"lat\":85.00719270016799,\"lng\":-179.0873706967623},{\"lat\":85.01417857171714,\"lng\":-179.0987039717131},{\"lat\":85.0227357091262,\"lng\":-179.11003724666395},{\"lat\":85.03825941412963,\"lng\":-179.1021382974558}]\n\n// console.log(seaShell.length)\n\nfunction MapInner({ L, deepzoom }: IProps) {\n  const root = useRef<any>();\n  const container = useRef<any>();\n\n  // get container size info\n  const rect: any = useContainerRect(container, ['width', 'height']);\n  const [width, height] = useMemo(\n    () =>\n      rect && rect.width && rect.height ? [rect.width, rect.height] : [0, 0],\n    [rect],\n  );\n\n  const defaultZoom: any = useMemo(() => {\n    if (deepzoom && width && height) {\n      const { zoom } = getSizeInfo(deepzoom, { width, height });\n      return deepzoom.maxZoom - zoom;\n    }\n    return undefined;\n  }, [width, height, deepzoom]);\n\n  // console.log({ defaultZoom });\n\n  const fileURI = 'https://bluewings.github.io/koholint/assets';\n\n  useEffect(() => {\n    // initialize leaflet viewer\n    if (defaultZoom && container.current) {\n      const {\n        width,\n        height,\n        minZoom,\n        maxZoom,\n        tileImg,\n        tileSizes,\n      }: any = deepzoom;\n\n      container.current.innerHTML = '';\n      const map = L.map(container.current, {\n        maxZoom: Math.max(defaultZoom, maxZoom),\n        minZoom: Math.max(defaultZoom, minZoom),\n        zoomControl: false,\n        attributionControl: false,\n        zoomSnap: 0,\n      });\n\n      // define the area of the map to display based on the original width\n      const southWest = map.unproject([0, height], map.getMaxZoom());\n      const northEast = map.unproject([width, 0], map.getMaxZoom());\n      const bounds = new L.LatLngBounds(southWest, northEast);\n\n      map.setMaxBounds(bounds);\n      map.setView([northEast.lng / 2, southWest.lat / 2], defaultZoom);\n      const center = [\n        (northEast.lng + southWest.lng) / 2,\n        (northEast.lat + southWest.lat) / 2,\n      ];\n\n      map.setView(\n        [\n          (northEast.lng + southWest.lng) / 2,\n          (northEast.lat + southWest.lat) / 2,\n        ],\n        defaultZoom,\n      );\n      // console.log({\n      //   bounds,\n      //   center,\n\n      //   center2: [northEast.lng / 2, southWest.lat / 2],\n      // });\n\n      // map.addEventListener('movestart', moveStart);\n      // map.addEventListener('moveend', moveEnd);\n\n      //   var myIcon = L.icon({\n      //     iconUrl: 'my-icon.png',\n      //     iconSize: [38, 95],\n      //     iconAnchor: [22, 94],\n      //     popupAnchor: [-3, -76],\n      //     shadowUrl: 'my-icon-shadow.png',\n      //     shadowSize: [68, 95],\n      //     shadowAnchor: [22, 94]\n      // });\n      // @ts-ignore\n      // L.marker([50.505, 30.57], {icon: myIcon}).addTo(map);\n\n     // @ts-ignore\n     var myIcon = L.divIcon({\n      className: styles.marker,\n      iconSize: [36, 36],\n      html: '<span class=\"icon-sea-shell\" />',\n    });\n    const mons = seaShell.map(({lat,lng}) => {\n      // @ts-ignore\n      return L.marker([lat,lng], { icon: myIcon })\n    })\n    // @ts-ignore\n    L.layerGroup(mons).addTo(map);\n\n      if (false) {\n\n      \n      // @ts-ignore\n      var myIcon = L.divIcon({\n        className: styles.marker,\n        iconSize: [36, 36],\n        html: '<span class=\"icon-monster\" />',\n      });\n      const mons = monsters.map(({lat,lng}) => {\n        // @ts-ignore\n        return L.marker([lat,lng], { icon: myIcon })\n      })\n      // @ts-ignore\n      L.layerGroup(mons).addTo(map);\n\n      // @ts-ignore\n      var myIcon = L.divIcon({\n        className: styles.marker,\n        iconSize: [36, 36],\n        html: '<span class=\"icon-telephone\" />',\n      });\n      const phn2 = phones.map(({lat,lng}) => {\n        // @ts-ignore\n        return L.marker([lat,lng], { icon: myIcon })\n      })\n      // @ts-ignore\n      L.layerGroup(phn2).addTo(map);\n      // add zoom control\n\n      // @ts-ignore\n      var myIcon = L.divIcon({\n        className: styles.marker,\n        iconSize: [36, 36],\n        html: '<span class=\"icon-house\" />',\n      });\n      const phn3 = homes.map(({lat,lng}) => {\n        // @ts-ignore\n        return L.marker([lat,lng], { icon: myIcon })\n      })\n      // @ts-ignore\n      L.layerGroup(phn3).addTo(map);\n      // add zoom control\n      \n\n      // @ts-ignore\n      var myIcon = L.divIcon({\n        className: styles.marker,\n        iconSize: [36, 36],\n        html: '<span class=\"icon-money-bag\" />',\n      });\n      const phn4 = moneyBag.map(({lat,lng}) => {\n        // @ts-ignore\n        return L.marker([lat,lng], { icon: myIcon })\n      })\n      // @ts-ignore\n      L.layerGroup(phn4).addTo(map);\n    }\n\n      // add zoom control\n      new L.Control.Zoom({ position: 'bottomright' }).addTo(map);\n\n      // apply a custom tile layer.\n      const MapTileLayer = L.TileLayer.extend({\n        createTile: function(coords: any, done: Function) {\n          const { z, x, y } = coords;\n          // do not provide an image beyond the supported range\n          if (!tileSizes[z]) {\n            return document.createElement('div');\n          }\n          const [maxX, maxY] = tileSizes[z];\n          // do not provide an image if there are no tiles in that area\n          if (x < 0 || y < 0 || maxX < x || maxY < y) {\n            return document.createElement('div');\n          }\n\n          let tileSrc = `${fileURI}/${tileImg}`\n            .replace(/{z}/, z)\n            .replace(/{x}/, x)\n            .replace(/{y}/, y);\n\n          // console.log({ maxX, maxY });\n\n          if (true || x === 0 || y === 0 || x === maxX || y === maxY) {\n            // console.log({ x, y });\n            tileSrc = tileSrc.replace(/\\.jpeg$/, '.png');\n          }\n          var tile = document.createElement('img');\n          tile.onload = () => {\n            tile.style.width = 'auto';\n            tile.style.height = 'auto';\n            done(null, tile);\n          };\n          tile.src = tileSrc;\n          return tile;\n        },\n      });\n\n      map.on('click', function(e) {\n        // @ts-ignore\n        // console.log(e.latlng);\n\n        locs.push(e.latlng)\n        // @ts-ignore\n        console.log(JSON.stringify(locs))\n    } );\n\n      new MapTileLayer({\n        minZoom,\n        maxZoom,\n        tms: false,\n        continuousWorld: 'false',\n        noWrap: false,\n        defaultRadius: 1,\n      }).addTo(map);\n\n      return () => {\n        try {\n          map.remove();\n        } catch (e) {\n          /* ignore */\n        }\n      };\n    }\n    return undefined;\n  }, [fileURI, deepzoom, defaultZoom, width, height]);\n\n  const containerStyle = useMemo(\n    () => (width && height ? { width: width, height: height } : {}),\n    [width, height],\n  );\n  return (\n    <div>\n      <div className={styles.root} ref={root}>\n        <div ref={container} style={containerStyle}></div>\n      </div>\n    </div>\n  );\n}\n\nfunction Map(props: any) {\n  const L = useLeaflet();\n  return <div>{L ? <MapInner L={L} deepzoom={deepzoom} /> : null}</div>;\n}\n\nconst getSizeInfo = (\n  deepzoomSize: any,\n  containerSize: any,\n  zoomSnap = false,\n) => {\n  const { width: deepzoomW, height: deepzoomH } = deepzoomSize;\n  const { width: containerW, height: containerH } = containerSize;\n  const r1 = containerW / containerH;\n  const r2 = deepzoomW / deepzoomH;\n  let scale = r1 > r2 ? deepzoomH / containerH : deepzoomW / containerW;\n  let zoom = Math.log(scale) / Math.log(2);\n  if (zoomSnap) {\n    zoom = Math.ceil(zoom);\n    scale = Math.pow(2, zoom);\n  }\n  const width = Math.ceil(deepzoomW / scale);\n  const height = Math.ceil(deepzoomH / scale);\n  return {\n    scale,\n    zoom,\n    style: {\n      width,\n      height,\n      top: (containerH - height) / 2,\n      left: (containerW - width) / 2,\n    },\n  };\n};\n\nexport default Map;\n","import Map from './Map';\n\nexport default Map;\n","import * as React from 'react';\nimport Map from '../Map';\nimport logoKo from './images/logo-en.png';\nimport Header from './Header';\nimport Icon from '../Icon';\nimport styles from './Main.module.scss';\n\nfunction Main(props: any) {\n  return (\n    <div className={styles.root}>\n      {/* <Header />\n      <Icon /> */}\n\n      {/* <img className={styles.logo} src={logoKo}/> */}\n      {/* <h1>Main</h1> */}\n      <Map />\n    </div>\n  );\n}\n\nexport default Main;\n","import Main from './Main';\n\nexport default Main;\n","import React from 'react';\nimport Main from './Main';\n// import Map from './Map';\nimport GithubCorner from 'react-github-corner';\n\nfunction App() {\n  return (\n    <div>\n      <Main />\n      {/* <GithubCorner href=\"https://github.com/bluewings/koholint\" /> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport './styles/style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}